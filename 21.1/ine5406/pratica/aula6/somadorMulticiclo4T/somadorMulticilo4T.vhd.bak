library ieee;
use ieee.std_logic_1164.all;
use work.BC_State.all;


entity somadorMulticiclo4T is
	generic(largura: positive);
	port(
		-- control in
		ck, reset, iniciar: in std_logic;
		-- control out
		erro, pronto: out std_logic;
		-- data in
		ent: in std_logic_vector(largura-1 downto 0);
		-- data out
		soma: out std_logic_vector(width_ent-1 downto 0);
		-- Tests
		stateBC: out State
	);
end entity;

architecture descricaoEstrutural of somadorMulticiclo4T is
	component blocoOperativo4T is
		generic(N: positive);
		port(
			-- control in
			clock, reset: in std_logic;
			-- control in (command signals from BC)
			scont, ccont, zAC, cAC, cT: in std_logic;		
			-- control out (status signals to BC)
			zero, ov: out std_logic;
			-- data in
			ent: in std_logic_vector(N-1 downto 0);
			-- data out
			soma: out std_logic_vector(N-1 downto 0) 
		);
	end component;
	component blocoControle4T is
		port(
			-- control in
			clock, reset, iniciar: in std_logic;
			-- control in (status signals from BC)
			zero, ov: in std_logic;
			-- control out 
			erro, pronto: out std_logic;
			-- control out (command signals to BC)
			scont, ccont, zAC, cAC, cT: out std_logic;
			-- Tests
			stateBC: out State
		);
	end component; 
	-- COMPLETE COM EVENTUAIS SINAIS INTERNOS
begin
    -- COMPLETE OS COMANDOS DE INSTANCIACAO ABAIXO
	BO: blocoOperativo4T 
			generic map(N=>)
			port map(clock=> , reset=> , 
				scont=> , ccont=> , zAC=> , cAC=> , cT=> ,
				zero=> , ov=> ,
				ent=> ,
				soma=> );
	BC: blocoControle4T port map(clock=> , reset=> , iniciar=> ,
				zero=> , ov=> ,
				erro=> , pronto=> ,
				scont=> , ccont=> , zAC=> , cAC=> , cT=> ,
				stateBC=> );
end architecture;
